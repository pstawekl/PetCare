openapi: 3.0.1
info:
  title: PetCare
  version: 1.0
paths:
  /api/Auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
          text/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/LoginDto"
      responses:
        '200':
          description: OK
  /api/Auth/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
      responses:
        '200':
          description: OK
  /api/Auth/refresh:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
      responses:
        '200':
          description: OK
  /api/Auth/verify:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: OK
  /api/Pets:
    get:
      tags:
        - Pets
      responses:
        '200':
          description: OK
    post:
      tags:
        - Pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
      responses:
        '200':
          description: OK
  /api/Pets/{id}:
    put:
      tags:
        - Pets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Pets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
components:
  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    PetCreateDto:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        owner:
          type: string
          nullable: true
      additionalProperties: false
    RegisterDto:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 100
        email:
          type: string
          minLength: 1
          maxLength: 100
        password:
          type: string
          minLength: 6
      additionalProperties: false
    RefreshTokenDto:
      type: object
      properties:
        refreshToken:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
      additionalProperties: false
