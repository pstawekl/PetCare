openapi: "3.0.1"
info:
  title: "PetCare"
  version: "1.0"
paths:
  /api/Auth/login:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
          text/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/LoginDto"
      responses:
        "200":
          description: "OK"
  /api/Auth/register:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RegisterDto"
      responses:
        "200":
          description: "OK"
  /api/Auth/refresh:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RefreshTokenDto"
      responses:
        "200":
          description: "OK"
  /api/Auth/verify:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
          text/json:
            schema:
              type: "string"
          application/*+json:
            schema:
              type: "string"
      responses:
        "200":
          description: "OK"
  /api/Pets:
    get:
      tags:
        - "Pets"
      responses:
        "200":
          description: "OK"
    post:
      tags:
        - "Pets"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
      responses:
        "200":
          description: "OK"
  /api/Pets/{id}:
    put:
      tags:
        - "Pets"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/PetCreateDto"
      responses:
        "200":
          description: "OK"
    delete:
      tags:
        - "Pets"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/Profile/{id}:
    post:
      tags:
        - "Profile"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - "Profile"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UpdateProfileDto"
      responses:
        "200":
          description: "OK"
  /api/Reminders:
    get:
      tags:
        - "Reminders"
      responses:
        "200":
          description: "OK"
    post:
      tags:
        - "Reminders"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
      responses:
        "200":
          description: "OK"
  /api/Reminders/{id}:
    put:
      tags:
        - "Reminders"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ReminderCreateDto"
      responses:
        "200":
          description: "OK"
    delete:
      tags:
        - "Reminders"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/Users:
    get:
      tags:
        - "Users"
      responses:
        "200":
          description: "OK"
    post:
      tags:
        - "Users"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
      responses:
        "200":
          description: "OK"
  /api/Users/{id}:
    put:
      tags:
        - "Users"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserCreateDto"
      responses:
        "200":
          description: "OK"
    delete:
      tags:
        - "Users"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/Visits:
    get:
      tags:
        - "Visits"
      responses:
        "200":
          description: "OK"
    post:
      tags:
        - "Visits"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - "Visits"
      parameters:
        - name: "id"
          in: "query"
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/VisitCreateDto"
      responses:
        "200":
          description: "OK"
  /api/Visits/{id}:
    delete:
      tags:
        - "Visits"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
components:
  schemas:
    LoginDto:
      type: "object"
      properties:
        username:
          type: "string"
          nullable: true
        password:
          type: "string"
          nullable: true
      additionalProperties: false
    PetCreateDto:
      required:
        - "name"
      type: "object"
      properties:
        name:
          minLength: 1
          type: "string"
        type:
          type: "string"
          nullable: true
        birthDate:
          type: "string"
          format: "date-time"
        owner:
          type: "string"
          nullable: true
      additionalProperties: false
    RefreshTokenDto:
      type: "object"
      properties:
        refreshToken:
          type: "string"
          nullable: true
        id:
          type: "integer"
          format: "int32"
        username:
          type: "string"
          nullable: true
      additionalProperties: false
    RegisterDto:
      required:
        - "email"
        - "password"
        - "username"
      type: "object"
      properties:
        username:
          maxLength: 100
          minLength: 1
          type: "string"
        email:
          maxLength: 100
          minLength: 1
          type: "string"
        password:
          minLength: 6
          type: "string"
      additionalProperties: false
    ReminderCreateDto:
      required:
        - "petId"
      type: "object"
      properties:
        petId:
          type: "integer"
          format: "int32"
        message:
          type: "string"
          nullable: true
        reminderDate:
          type: "string"
          format: "date-time"
        isSent:
          type: "boolean"
      additionalProperties: false
    UpdateProfileDto:
      type: "object"
      properties:
        name:
          type: "string"
          nullable: true
        email:
          type: "string"
          nullable: true
      additionalProperties: false
    UserCreateDto:
      required:
        - "email"
        - "passwordHash"
        - "username"
      type: "object"
      properties:
        username:
          minLength: 1
          type: "string"
        email:
          minLength: 1
          type: "string"
        passwordHash:
          minLength: 1
          type: "string"
      additionalProperties: false
    VisitCreateDto:
      required:
        - "petId"
      type: "object"
      properties:
        petId:
          type: "integer"
          format: "int32"
        visitDate:
          type: "string"
          format: "date-time"
        description:
          type: "string"
          nullable: true
        isCompleted:
          type: "boolean"
      additionalProperties: false